name: CI

on:
  push:
    branches: [ main, 'audit/**' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gestion_restaurant_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: TypeScript check
        run: npx tsc --noEmit

      - name: Lint
        run: npm run lint --if-present

      - name: Run tests
        run: npm test --if-present

      - name: Build Next.js
        run: npm run build
name: CI

on:
  push:
    branches: [ main, master, feature/** ]
  name: CI

  on:
    push:
      branches: [ main, master, feature/** ]
    pull_request:
      branches: [ main, master ]

  jobs:
    build-and-e2e:
      name: CI

      on:
        push:
          branches: [ main, master, feature/** ]
        pull_request:
          branches: [ main, master ]

      jobs:
        build-and-e2e:
          runs-on: ubuntu-latest
          services:
            postgres:
              image: postgres:15-alpine
              env:
                POSTGRES_USER: prisma
                POSTGRES_PASSWORD: prisma
                POSTGRES_DB: gestion_test
              ports:
                - 5432:5432
              options: >-
                --health-cmd="pg_isready -U prisma -d gestion_test" --health-interval=10s --health-timeout=5s --health-retries=5

          steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'

            - name: Install dependencies
              run: npm ci

            - name: Wait for Postgres
              run: |
                for i in {1..30}; do
                  pg_isready -h localhost -p 5432 -U prisma && break || sleep 1
                done

            - name: Generate Prisma client
              env:
                DATABASE_URL: postgresql://prisma:prisma@localhost:5432/gestion_test
              run: npx prisma generate

            - name: Apply migrations (if any)
              env:
                DATABASE_URL: postgresql://prisma:prisma@localhost:5432/gestion_test
              run: npx prisma migrate deploy || true

            - name: Seed database (best-effort)
              env:
                DATABASE_URL: postgresql://prisma:prisma@localhost:5432/gestion_test
              run: npx tsx prisma/seed.ts || true

            - name: Typecheck
              run: npx tsc --noEmit || true

            - name: Build
              run: npm run build

            - name: Start server in background
              env:
                DATABASE_URL: postgresql://prisma:prisma@localhost:5432/gestion_test
                NEXTAUTH_URL: http://localhost:4000
                NEXTAUTH_SECRET: test_secret
              run: |
                nohup npx tsx server.ts > server-ci.log 2>&1 &
                sleep 6

            - name: E2E - Programmatic signin (CSRF-aware)
              run: |
                set -e
                CSRF=$(curl -sS http://localhost:4000/api/auth/csrf | jq -r .csrfToken)
                echo "csrf=$CSRF"
                curl -sS -c /tmp/cookies.txt -b /tmp/cookies.txt -X POST "http://localhost:4000/api/auth/callback/credentials" \
                  -H "Content-Type: application/x-www-form-urlencoded" \
                  --data-urlencode "csrfToken=${CSRF}" --data-urlencode "email=michel.manager@legourmetmoderne.fr" --data-urlencode "password=ChangeMe123!" -L -v || true
                sleep 1
                curl -sS -b /tmp/cookies.txt http://localhost:4000/api/auth/session | jq . || true

