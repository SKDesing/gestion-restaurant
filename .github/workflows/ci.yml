name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build-and-e2e:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
          POSTGRES_DB: gestion_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U prisma -d gestion_test" --health-interval=10s --health-timeout=5s --health-retries=5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U prisma && break || sleep 1;
          done

      - name: Generate Prisma client
        env:
          DATABASE_URL: postgresql://prisma:prisma@localhost:5432/gestion_test
        run: npx prisma generate

      - name: Apply migrations
        env:
          DATABASE_URL: postgresql://prisma:prisma@localhost:5432/gestion_test
        run: npx prisma migrate deploy || true

      - name: Seed database
        env:
          DATABASE_URL: postgresql://prisma:prisma@localhost:5432/gestion_test
        run: node prisma/seed.ts || true

      - name: Typecheck
        run: npx tsc --noEmit

      - name: Start server in background
        env:
          DATABASE_URL: postgresql://prisma:prisma@localhost:5432/gestion_test
          NEXTAUTH_URL: http://localhost:4000
          NEXTAUTH_SECRET: test_secret
        run: |
          nohup npx tsx server.ts > server-ci.log 2>&1 &
          sleep 6

      - name: E2E - Programmatic signin (CSRF-aware)
        run: |
          CSRF=$(curl -sS http://localhost:4000/api/auth/csrf | jq -r .csrfToken)
          curl -sS -c /tmp/cookies.txt -b /tmp/cookies.txt -X POST "http://localhost:4000/api/auth/callback/credentials" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode "csrfToken=${CSRF}" --data-urlencode "email=michel.manager@legourmetmoderne.fr" --data-urlencode "password=ChangeMe123!" -L -v || true
          sleep 1
          curl -sS -b /tmp/cookies.txt http://localhost:4000/api/auth/session | jq .

